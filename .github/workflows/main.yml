# This is a basic workflow to help you get started with Actions

name: Gitbook generate

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: [ dev ]
    paths:
      - 'docs/'
      - '.github/workflows/main.yml'

# 系统环境变量
env:
  AREA: Asia/Shanghai
  MASTER_PATH: 'dev-branch'
  PAGES_PATH: 'pages-branch'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  docs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout dev branch
        uses: actions/checkout@v2
        with:
          - ref: 'dev'
          - path: $MASTER_PATH
      - name: Checkout gh-pages branch
        uses: actions/checkout@v2
        with:
          - ref: 'gh-pages'
          - path: $PAGES_PATH

      - name: Setup [node] env
        uses: actions/setup-node@v1
        with:
          node-version: '10'

      - name: Setup Deploy env
        run: |
          npm install gitbook -g
          echo "gitbook version: " $(gitbook -V)
          echo "start install gitbook plugins..."
          gitbook install
      - name: generate file
        env:
          file_name: "problems.md"
        run: |
          cd $MASTER_PATH/docs
          gitbook build . $PAGES_PATH/docs
          && echo "build completed!"

      - name: set AZ
        run: |
          sudo timedatectl set-timezone $AREA # 设置机器时间区域，如果没有这步，commit信息时间区域不对。

      - name: Setup git config env
        env:
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          USER_NAME: github-actions[bot]
        run: |
          git config --global user.name $USER_NAME
          git config --global user.email $USER_EMAIL

      # Runs a set of commands using the runners shell
      - name: push the generated file into repo
        run: |
          cd ~/$PAGES_PATH/
          git add .
          if test -z "$(git diff --cached)"; then
            echo "no generated files."
          else
            git status
            git commit -m "[github actions] updated"
            git push origin gh-pages
            [ $? -eq 0 ] && echo "Push successfully."
          fi