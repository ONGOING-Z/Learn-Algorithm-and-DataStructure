# This is a basic workflow to help you get started with Actions

name: Generate leetcode problem file

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: [ dev ]
    paths:
      - 'OJ/LeetCode/leetcode/problems'
      - '.github/workflows/main.yml'

# 系统环境变量
env:
  AREA: Asia/Shanghai

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  docs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: build up document and deploy

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout source
        uses: actions/checkout@v2

      - name: generate file
        run: |
          if [ -d "OJ/LeetCode/leetcode/problems" ]; then
            cd OJ/LeetCode/leetcode/problems
            # create a file
            touch problems.md
            # sort the files after finding all the cpp files
            for cpp_file in $(find . -name '*.cpp' | sort)
            do
              echo "- $(basename $cpp_file .cpp)\n" >> problems.md # add cpp file's simple name
              echo "\`\`\`cpp" >> problems.md
              cat $cpp_file >> problems.md # add cpp file's content
              echo "\`\`\`\n" >> problems.md
            done
          else
            echo "problems文件夹不存在！"
            exit 2
          fi

      - name: set AZ
        run: |
          sudo timedatectl set-timezone $AREA # 设置机器时间区域，如果没有这步，commit信息时间区域不对。

      # Runs a set of commands using the runners shell
      - name: push the generated file into repo
        run: |
          git add .
          if test -z "$(git diff --cached)"; then
            echo "no generated files."
          else
            git status
            git commit -m "[action bot] problem.md udpated"
            git push origin dev
            [ $? -eq 0 ] && echo "Push successfully."
          fi
